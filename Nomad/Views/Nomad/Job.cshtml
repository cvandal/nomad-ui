@model Nomad.Models.Job

<div class="row spacer">
    <div class="col-md-3">
        <h4>@(Model.Name.First().ToString().ToUpper() + Model.Name.Substring(1)) Properties</h4>
        <ul class="list-group">
            <li class="list-group-item"><strong>ID</strong>: @Model.ID</li>
            <li class="list-group-item"><strong>Region</strong>: @Model.Region</li>
            <li class="list-group-item"><strong>Datacenters</strong>: @string.Join(",", Model.Datacenters)</li>
            <li class="list-group-item"><strong>Type</strong>: @Model.Type</li>
            <li class="list-group-item"><strong>Priority</strong>: @Model.Priority</li>
            <li class="list-group-item"><strong>Status</strong>: @Model.Status</li>
            <li class="list-group-item"><strong>Constraints</strong>:</li>
            @if (Model.Constraints != null)
            {
                <li class="list-group-item list-group-item-condensed">
                    <ul class="list-group">
                        @foreach (var constraint in Model.Constraints.OrderBy(c => c.LTarget))
                        {
                            <li class="list-group-item">@constraint.LTarget @constraint.Operand @constraint.RTarget</li>
                        }
                    </ul>
                </li>
            }
            <li class="list-group-item"><strong>Meta</strong>:</li>
            @if (Model.Meta != null)
            {
                <li class="list-group-item list-group-item-condensed">
                    <ul class="list-group">
                        @foreach (var meta in Model.Meta.OrderBy(m => m.Key))
                        {
                            <li class="list-group-item">@meta.Key = @meta.Value</li>
                        }
                    </ul>
                </li>
            }
        </ul>
    </div>

    <div class="col-md-9">
        @foreach (var taskGroup in Model.TaskGroups.OrderBy(tg => tg.Name))
        {
            <div class="row spacer">
                <div class="col-md-4">
                    <h4>@(taskGroup.Name.First().ToString().ToUpper() + taskGroup.Name.Substring(1)) Properties</h4>
                    <ul>
                        <li class="list-group-item"><strong>Count</strong>: @taskGroup.Count</li>
                        <li class="list-group-item"><strong>Restart Policy Mode</strong>: @taskGroup.RestartPolicy.Mode</li>
                        <li class="list-group-item"><strong>Restart Policy Attempts</strong>: @taskGroup.RestartPolicy.Attempts</li>
                        <li class="list-group-item"><strong>Constraints</strong>:</li>
                        @if (taskGroup.Constraints != null)
                        {
                            <li class="list-group-item list-group-item-condensed">
                                <ul class="list-group">
                                    @foreach (var constraint in taskGroup.Constraints.OrderBy(c => c.LTarget))
                                    {
                                        <li class="list-group-item">@constraint.LTarget @constraint.Operand @constraint.RTarget</li>
                                    }
                                </ul>
                            </li>
                        }
                        <li class="list-group-item"><strong>Meta</strong>:</li>
                        @if (taskGroup.Meta != null)
                        {
                            <li class="list-group-item list-group-item-condensed">
                                <ul class="list-group">
                                    @foreach (var meta in taskGroup.Meta.OrderBy(m => m.Key))
                                    {
                                        <li class="list-group-item">@meta.Key = @meta.Value</li>
                                    }
                                </ul>
                            </li>
                        }
                    </ul>
                </div>

                <div class="col-md-8">
                    <div class="row">
                        @foreach (var task in taskGroup.Tasks.OrderBy(t => t.Name))
                        {
                            <div class="col-md-6 spacer">
                                <h4>@(task.Name.First().ToString().ToUpper() + task.Name.Substring(1)) Properties</h4>
                                <ul>
                                    <li class="list-group-item"><strong>Driver</strong>: @task.Driver</li>
                                    <li class="list-group-item"><strong>Maximum Number of Log Files</strong>: @task.LogConfig.MaxFiles</li>
                                    <li class="list-group-item"><strong>Maximum Size of Log Files (MB)</strong>: @task.LogConfig.MaxFileSizeMB</li>
                                    <li class="list-group-item"><strong>CPU (MHz)</strong>: @task.Resources.CPU</li>
                                    <li class="list-group-item"><strong>Memory (MB)</strong>: @task.Resources.MemoryMB</li>
                                    <li class="list-group-item"><strong>Constraints</strong>:</li>
                                    @if (task.Constraints != null)
                                    {
                                        <li class="list-group-item list-group-item-condensed">
                                            <ul class="list-group">
                                                @foreach (var constraint in task.Constraints.OrderBy(c => c.LTarget))
                                                {
                                                    <li class="list-group-item">@constraint.LTarget @constraint.Operand @constraint.RTarget</li>
                                                }
                                            </ul>
                                        </li>
                                    }
                                    <li class="list-group-item"><strong>Meta</strong>:</li>
                                    @if (task.Meta != null)
                                    {
                                        <li class="list-group-item list-group-item-condensed">
                                            <ul class="list-group">
                                                @foreach (var meta in task.Meta.OrderBy(m => m.Key))
                                                {
                                                    <li class="list-group-item">@meta.Key = @meta.Value</li>
                                                }
                                            </ul>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>

                </div>
            </div>
        }
    </div>
</div>

<div class="row spacer">
    <div class="col-md-12">
        <h4>Docker Properties</h4>

        <table class="table table-hover">
            <thead>
                <tr class="row">
                    <th class="col-md-1">Task</th>
                    <th class="col-md-3">Image</th>
                    <th class="col-md-1">Network Mode</th>
                    <th class="col-md-1">Command</th>
                    <th class="col-md-2">Arguments</th>
                    <th class="col-md-4">Environment Variables</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var taskGroup in Model.TaskGroups)
                {
                    @foreach (var task in taskGroup.Tasks.OrderBy(t => t.Name))
                    {
                        <tr class="row">
                            <td class="col-md-1">@task.Name</td>
                            <td class="col-md-3">@task.Config.Image</td>
                            <td class="col-md-1">@task.Config.Network_Mode</td>
                            <td class="col-md-1">@if (task.Config.Command != null) { @task.Config.Command }</td>
                            <td class="col-md-2">@if (task.Config.Args != null) { @Html.Raw(String.Join("<br />", task.Config.Args)) }</td>
                            <td class="col-md-4">@if (task.Env != null) { @Html.Raw(String.Join("<br />", task.Env.Select(e => e.Key + " = " + e.Value).OrderBy(e => e))) }</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row spacer">
    <div class="col-md-12">
        <h4>Evaluations</h4>

        <table class="table table-hover">
            <thead>
                <tr class="row">
                    <th class="col">ID</th>
                    <th class="col">Job ID</th>
                    <th class="col">Type</th>
                    <th class="col">Priority</th>
                    <th class="col">Triggered By</th>
                    <th class="col">Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var evaluation in Model.Evaluations)
                {
                    <tr class="row">
                        <td class="col"><a href="/evaluation?id=@evaluation.ID">@evaluation.ID</a></td>
                        <td class="col">@evaluation.JobID</td>
                        <td class="col">@evaluation.Type</td>
                        <td class="col">@evaluation.Priority</td>
                        <td class="col">@evaluation.TriggeredBy</td>
                        <td class="col">@evaluation.Status</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row spacer">
    <div class="col-md-12">
        <h4>Allocations</h4>

        <table class="table table-hover">
            <thead>
                <tr class="row">
                    <th class="col">ID</th>
                    <th class="col">Name</th>
                    <th class="col">Task Group</th>
                    <th class="col">Desired Status</th>
                    <th class="col">Client Status</th>
                    <th class="col">Create Time</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var allocation in Model.Allocations)
                {
                    <tr class="row">
                        <td class="col"><a href="/allocation?id=@allocation.ID">@allocation.ID</a></td>
                        <td class="col">@allocation.Name</td>
                        <td class="col">@allocation.TaskGroup</td>
                        <td class="col">@allocation.DesiredStatus</td>
                        <td class="col">@allocation.ClientStatus</td>
                        <td class="col">@allocation.CreateDateTime</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <h4>Raw JSON <a class="material-icons" href="#json" data-toggle="collapse">keyboard_arrow_down</a></h4>
        
        <div id="json" class="collapse">
            <pre><code>@ViewData["Json"]</code></pre>
        </div>
    </div>
</div>
